// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyMadeATMBackend.Context;

#nullable disable

namespace ReadyMadeATMBackend.Migrations
{
    [DbContext(typeof(ReadyMadeATMContext))]
    [Migration("20240711094621_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReadyMadeATMBackend.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("CurrentBalance")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 500.0,
                            CurrentBalance = 1500.0,
                            SenderId = 1,
                            Timestamp = new DateTime(2024, 5, 11, 15, 16, 20, 820, DateTimeKind.Local).AddTicks(2415),
                            Type = "Deposit"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200.0,
                            CurrentBalance = 1300.0,
                            SenderId = 1,
                            Timestamp = new DateTime(2024, 6, 11, 15, 16, 20, 820, DateTimeKind.Local).AddTicks(2439),
                            Type = "Withdraw"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1000.0,
                            CurrentBalance = 3000.0,
                            SenderId = 2,
                            Timestamp = new DateTime(2024, 6, 11, 15, 16, 20, 820, DateTimeKind.Local).AddTicks(2468),
                            Type = "Deposit"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 500.0,
                            CurrentBalance = 2500.0,
                            SenderId = 2,
                            Timestamp = new DateTime(2024, 5, 11, 15, 16, 20, 820, DateTimeKind.Local).AddTicks(2492),
                            Type = "Withdraw"
                        });
                });

            modelBuilder.Entity("ReadyMadeATMBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AtmNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Pin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AtmNumber = "1234567890",
                            Balance = 1000.0,
                            Name = "Alice",
                            Pin = 1234
                        },
                        new
                        {
                            Id = 2,
                            AtmNumber = "1234567891",
                            Balance = 2000.0,
                            Name = "Bob",
                            Pin = 1234
                        },
                        new
                        {
                            Id = 3,
                            AtmNumber = "1234567892",
                            Balance = 3000.0,
                            Name = "Charlie",
                            Pin = 1234
                        },
                        new
                        {
                            Id = 4,
                            AtmNumber = "1234567893",
                            Balance = 4000.0,
                            Name = "Diana",
                            Pin = 1234
                        });
                });

            modelBuilder.Entity("ReadyMadeATMBackend.Models.Transaction", b =>
                {
                    b.HasOne("ReadyMadeATMBackend.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId");

                    b.HasOne("ReadyMadeATMBackend.Models.User", "Sender")
                        .WithMany("Transactions")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ReadyMadeATMBackend.Models.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
